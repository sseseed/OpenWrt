name: Openwrt 22.02.2
on: 
  release:
    types: [published]
  push:
    tags:
    - 'v*'
  #  branches: 
  #    - master
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        #sudo apt-get update
        #sudo apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        #sudo apt-get update
        #sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
        #sudo apt-get -y autoremove --purge
        #sudo apt-get clean
        
    - name: Update feeds
      run: |
        #git checkout 21.02.2 https://github.com/openwrt/openwrt /home/runner/work/OpenWrt2/OpenWrt2
        git clone --depth=1 https://github.com/openwrt/openwrt/tree/openwrt-21.02 /home/runner/work/OpenWrt2/OpenWrt2
        cd /opt/openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a
    - name: Generate configuration file
      run: |
          rm -f ./.config*
          touch ./.config
          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:
          cat >> .config <<EOF
          CONFIG_TARGET_IMAGES_GZIP=y
          CONFIG_KERNEL_BUILD_USER="OpenWrt-CI"
          CONFIG_KERNEL_BUILD_DOMAIN="Azure"
          EOF
          #
          # ===============================================================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

    - name: Make download
      run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h
    - name: Compile firmware
      run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true
    - name: Prepare artifact
      run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
    - name: Deliver buildinfo
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_buildinfo
        path: ./artifact/buildinfo/

    - name: Deliver package
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_package
        path: ./artifact/package/

    - name: Deliver firmware
      uses: actions/upload-artifact@v2
      with:
        name: OpenWrt_firmware
        path: ./bin/targets/

    - name : Upload packages
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: Padavan-packages
        file: ./artifact/firmware/*
